version: "3.8"
services:
  reverse-proxy:
    image: traefik:v3.0
    container_name: "traefik3"
    command:
      - "--api.insecure=false"
      - "--api.dashboard=true"
      # 디버깅
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # 디버깅
      - "--log.LEVEL=DEBUG"
      - "--log.filepath=/letsencrypt/access.log"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      # acme.json에 myresolver 가 이름으로...
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=jakekwak@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
#      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.javapad.com`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      ## 외부파일로 패스워드는 에러가 남  .htpasswd
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=user:$$apr1$$q8eZFHjF$$Fvmkk//V6Btlaf2i/ju5n/" ## user/password
      ## middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      ## global redirect to https
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"

  nginx_server:
    container_name: nginx_server
    restart: unless-stopped
    logging:
      driver: none
    image: "nginx:latest"
    expose:
      - 8080
    volumes:
      - ./www:/code/static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/app.nginx.template:/etc/nginx/templates/app.nginx.template
      - "${EB_LOG_BASE_DIR:-./nginx-config-files}/nginx-proxy:/var/log/nginx"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx_local.rule=Host(`www.javapad.com`, `javapad.com`)"
      - "traefik.http.routers.nginx_local.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin_local.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"
      - "traefik.http.services.nginx_local_service.loadbalancer.server.port=8080"

  mariadb:
    image: mariadb:latest
    restart: always
    container_name: mariadb
    # env_file: ".env"
    volumes:
      - ./mariadb/data:/var/lib/mysql/data
      - ./mariadb/logs:/var/lib/mysql/logs
    expose:
      - 3306
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=database
      - MYSQL_ROOT_PASSWORD=root1234

  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    container_name: phpmyadmin
    # ports:
    #   - 8090:80
    expose:
      - 8090
    depends_on:
      - mariadb
    environment:
      - PMA_HOST=mariadb
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
      - MYSQL_ROOT_PASSWORD=root1234
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.phpmyadmin_local.rule=Host(`pma.javapad.com`)"
      - "traefik.http.routers.phpmyadmin_local.entrypoints=websecure"
      - "traefik.http.routers.phpmyadmin_local.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"


  node-server:
    build:
      context: ./sveltekit
      dockerfile: Dockerfile
    container_name: node-server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-server.rule=Host(`node0.javapad.com`)"
      - "traefik.http.routers.node-server.entrypoints=websecure"
      - "traefik.http.routers.node-server.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"

  node-server1:
    build:
      context: ./learnsvelte
      dockerfile: Dockerfile
    container_name: node-server1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-server1.rule=Host(`node1.javapad.com`)"
      - "traefik.http.routers.node-server1.entrypoints=websecure"
      - "traefik.http.routers.node-server1.tls.certresolver=myresolver"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"
